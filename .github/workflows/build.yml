# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - 'main'
      - 'release*'
  pull_request:
    branches:
      - 'main'
      - 'release*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Ubuntu build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working-directory: ./dance_chaos

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Install Firebase Emulator Suite
        run: npm install -g firebase-tools
        working-directory: ${{env.working-directory}}

      # Runs the Super-Linter action
#      - name: Run Super-Linter
#        uses: github/super-linter@v3
#        env:
#          DEFAULT_BRANCH: main
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: subosito/flutter-action@v1
        with:
          channel: beta # Needed to build web version

#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.

      - run: flutter config --enable-web
        working-directory: ${{env.working-directory}}

      - run: flutter pub get
        working-directory: ${{env.working-directory}}
      - name: Test app
        run: flutter test --coverage
        working-directory: ${{env.working-directory}}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info
#      - run: flutter build apk --target-platform android-arm,android-arm64,android-x64 --split-per-abi

      - run: flutter build web
        working-directory: ${{env.working-directory}}
      - run: npm -version
        working-directory: ${{env.working-directory}}
      - run: firebase --version
        working-directory: ${{env.working-directory}}
      - run: firebase deploy --token "${{ secrets.FIREBASE_LOGIN_TOKEN }}"
        working-directory: ${{env.working-directory}}

  drive_ios:
    #creates a build matrix for your jobs
    strategy:
      #set of different configurations of the virtual environment.
      matrix:
        device:
          - "Android X86 on Mac"
      fail-fast: false
    runs-on: macos-latest
    env:
      working-directory: ./dance_chaos
    timeout-minutes: 30
    #Identifies any jobs that must complete successfully before this job will run.
#    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Install Firebase Emulator Suite
        run: npm install -g firebase-tools
        working-directory: ${{env.working-directory}}
      - uses: subosito/flutter-action@v1
        with:
          channel: beta # Needed to build web version
#          flutter-version: '1.12.14'
#          channel: 'dev'
      # Run flutter integrate tests
      - name: Set up the emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: flutter drive --target=test_driver/app.dart

      - run: firebase --version
        working-directory: ${{env.working-directory}}
      - run: flutter --version
        working-directory: ${{env.working-directory}}
      - run: java -version
        working-directory: ${{env.working-directory}}
      - run: firebase emulators:exec --import=./seed --token "${{ secrets.FIREBASE_LOGIN_TOKEN }}" --debug "flutter drive --target=test_driver/app_local_emulator.dart"
        working-directory: ${{env.working-directory}}

#  emulator_test:
#    name: Run all tests using Firebase Emulator Suite
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: "12"
#      - name: Install Firebase Emulator Suite
#        run: npm install -g firebase-tools
#      - name: Install dependencies
#        run: npm install
#        working-directory: codelab-final-state/functions
#      - name: Run all the tests
#        working-directory: codelab-final-state/functions
#        run: firebase emulators:exec --project example 'npm test'

#  build-mac:
#    name: macos build
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '1.20.4'
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build apk
#      - run: flutter build ios --release --no-codesign
